
 - added a manpage for Tspi_TPM_PcrExtend
 - added SHA1_HASH_SIZE #define tied to openssl/sha.h
 - Corrected typo in tcpa_types.h of pValdationData -> pValidationData
 - updated README with info on device file stuff
 - added a usage function and long options to tcsd
 - added an error message when incorrect params are passed to tcsd on
   the command line.
 - added -lcrypto and -lpthread to the build of libtspi.so, so that app
   writers will avoid having to include those when they don't have to.
 - Connected up Tspi_TPM_SetStatus and Tspi_TPM_SelfTestFull to
   TCSP_SetTempDeactivated, TCSP_SelfTestFull, TCSP_SetOwnerInstall,
   TCSP_OwnerSetDisable and TCSP_PhysicalDisable.
 - Bugfixes
   - tcsem.c:507, error in calculating number of PCR events to copy out.
   - sf.net bug #1151183 fixed. Tspi_TPM_GetPubEndorsementKey now takes
   the correct number of params, and all testcases/TSS calls are changed.
   - sf.net bug #1113313 fixed. Tspi_TPM_TakeOwnership now allows a NULL
   pub endorsement key handle and a testcase,
   tcg/highlevel/tpm/Tspi_TPM_TakeOwnership03.c, exists to test this.

* TROUSERS_0_1_7

 - Fixed the logging up so that if tcsd -f is specified, all logs go the
   foreground, else all logs go to syslog.
 - Moved the TPM_IOCTL #define into the tddl.h file. Now, if you're
   using the IBM research device driver, compiling with #define TPM_IOCTL
   will use ioctl's to open /dev/tpm and #undef TPM_IOCTL will use
   read/write calls to /dev/tpm0.
 - Revert accidental change in tddl.c
 - Lots of 0's replaced with non-magic #define's in the TSP code
 - In spi_getset.c: removed unimportant debugging stmts; make
   Tspi_{Get|Set}AttribData set the correct public and private key data
   when asked to.
 - Lots of manpage verbage changes.
 - added new manpages for: Tspi_TPM_TakeOwnership, Tspi_Key_LoadKey,
   Tspi_Context_Create and Tspi_TPM_ClearOwner.
 - Bugfixes
   - cxt.c: when destroying a context object, release the tcs_ctx_lock before
     calling ctx_ref_count_keys(). This prevents a deadlock.
   - added a mutex unlock call for an error path that would have caused a
     deadlock

* TROUSERS_0_1_6

 - Logging functionality changes only, for bug #1106301
   - TCSD:
     - Logs now go to stdout/stderr until a successful startup
     - After a successful startup, cmdline args are parsed
     - if -f is specified, logging continues to stdout/stderr and daemon runs
       in the foreground, killable by ctrl-c.
     - If -f is not specified, logs go to syslog and the tcsd forks into the
       background
   - TSP library
     - If compiled w/o debugging, there is no logging of any kind
     - If compiled w/ debugging, all logs go to stdout/stderr, unless the
       environment variable TSS_DEBUG_OFF is set, then, there is no logging of
       any kind
 - There is no longer a --enable-stderrlog option to the configure script

* TROUSERS_0_1_5

 - Complete memory management overhaul. calloc_tspi is now used to clean up
   memory allocated by Tspi functions. TCS blob functions have been changed
   to not require a context, since there's no need w/o calloc_tspi. Its
   now necessary to call free explicitly everywhere in the TCS. In the TSP,
   calloc_tspi is now always called with the TSP context of the session, which
   would will ensure all memory allocated by the session is accounted for.
 - Unused #defines and variables removed from spi_utils.h
 - Commented out code removed throughout the source.
 - Removed log.o on a 'make clean'.
 - commented out unnecessary logging, added more descriptive logging
 - renamed variables named 'hContext' to specifiy whether they represent TSP
   of TCS context handles.
 - got rid of a few magic numbers
 - Bugfixes
   - in tcs/cache.c, getNextTimeStamp() was unlocking the mutex twice.
   - removed destroy_key_refs() in TSP, which caused double free errors
   - added call to event_log_final() in tcsd_shutdown() to clean up the event log
   - added an intermediate copy stage of data in getTCSDPacket() to avoid
   memcpy() calls with overlapping source and dest fields.

* TROUSERS_0_1_4

 - added ChangeLog :-)
 - TSP object management overhaul. All API's should be correct for contexts
    whether they're connected to a TCS or not.
 - testsuite changes based on object mgmt overhaul
 - various internal fixes and simplifications of the code due to object mgmt
    overhaul

* TROUSERS_0_1_3

 - added helpful message when package gtk2-devel is not found in configure.in
 - chown changes in dist/Makefile for new syntax
 - added detailed flags to various manpages
 - TSP memory management overhaul
 - added more complete destroy_key_refs() function
 - Bugfixes
    - quashed memory leaks in TSP found by valgrind
    - return TRUE/FALSE from getAttribData
    - added TSS_TSPATTRIB_KEYINFO_SIZE to Tspi_GetAttribData
    - call free() not Tspi_Context_FreeMemory() in spi_utils.c

* TROUSERS_0_1_2

 - added bug report mailing list to configure.in
 - added --enable-stderrlog feature to configure.in
 - Marked Tspi_TPM_GetCapabilitySigned as not implemented (per TSS v1.1b spec)
 - Bugfixes
    - Removed common.h from Tspi_Context_RegisterKey manpage
    - added endianess macros to spi_utils.h
    - made all endianess fixes to the TSP and testsuite
    - logging improvements tcspbg.c
    - tcs_utils.c compile time warning quashed

* TROUSERS_0_1_1

 - Updated design doc
 - Updated README
 - More sensible function naming (no addNewObject, just addObject)
 - Bugfixes
    - return data correctly in Tspi_GetAttribData
    - malloc space for returned UUID correctly in tspps.c
    - log errors in tddl.c
    - follow a failure path in auth_mgr.c
    - don't always return success in req_mgr.c

* TROUSERS_0_1_0

 - Initial code drop
